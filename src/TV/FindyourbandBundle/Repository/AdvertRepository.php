<?php

namespace TV\FindyourbandBundle\Repository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAdverts($page, $nbPerPage)
    {
        $query = $this->createQueryBuilder('a')
            ->orderBy('a.date', 'DESC')
            ->getQuery()
        ;
        
        $query
            ->setFirstResult(($page-1) * $nbPerPage)
            ->setMaxResults($nbPerPage)
          ;
        return new Paginator($query, true);
    }
    
    public function getAdvertsHome()
    {
        $query = $this->createQueryBuilder('a')
            ->orderBy('a.date', 'DESC')
            ->setMaxResults(3)
            ->getQuery()
        ;

        return $query->getResult();
    }
    
    public function getAdvertsAdmin()
    {
        $query = $this->createQueryBuilder('a')
            ->orderBy('a.date', 'DESC')
            ->setMaxResults(20)
            ->getQuery()
        ;

        return $query->getResult();
    }
    
    public function getAdvertsWithFilters(\TV\FindyourbandBundle\Entity\Search $search)
    {
        $query = $this->createQueryBuilder('a')
            ->where('a.province = :province')
            ->setParameter('province', $search->getProvince())
            ->andWhere('a.genre = :genre')
            ->setParameter('genre', $search->getGenre())
            ->andWhere('a.level = :level')
            ->setParameter('level', $search->getLevel())
            ->andWhere('a.instrument = :instrument')
            ->setParameter('instrument', $search->getInstrument())
            ->orderBy('a.date', 'DESC')
            ->getQuery()
        ;

        return $query->getResult();
    }

    public function myFindOne($id)
    {
        $qb = $this->createQueryBuilder('a');

        $qb
          ->where('a.id = :id')
          ->setParameter('id', $id)
        ;

        return $qb
          ->getQuery()
          ->getResult()
        ;
    }
}
